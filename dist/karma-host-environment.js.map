{
  "version": 3,
  "sources": [
    "../node_modules/browser-pack/_prelude.js",
    "../lib/browser.js",
    "../lib/user-agent.js"
  ],
  "names": [],
  "mappings": ";;;;;;;;AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "'use strict';\n\nvar userAgent = require('./user-agent');\n\nmodule.exports = window.host = {\n  node: false,\n  karma: false,\n  os: userAgent.getOS(),\n  browser: userAgent.getBrowser(),\n  env: {},\n};\n",
    "'use strict';\n\nmodule.exports = {\n  /**\n   * Returns information about the current browser environment, by parsing the user-agent string\n   *\n   * @returns {object}\n   */\n  getBrowser: function getBrowser () {\n    var userAgent = navigator.userAgent;\n\n    var browser = {\n      IE: false,\n      chrome: false,\n      firefox: false,\n      safari: false,\n      mobile: /(Mobile|Android|iPhone|iPad)/.test(userAgent),\n\n    };\n\n    // NOTE: The order matters here!\n    var userAgents = [\n      { name: 'IE', pattern: /(?:MSIE|Edge)(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n      { name: 'IE', pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n      { name: 'chrome', pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n      { name: 'firefox', pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n      { name: 'safari', pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n    ];\n\n    for (var i = 0; i < userAgents.length; i++) {\n      var match = userAgents[i].pattern.exec(userAgent);\n      if (match) {\n        var major = parseInt(match[1]) || 0;\n        var minor = parseInt(match[2]) || 0;\n        var patch = parseInt(match[3]) || 0;\n\n        browser[userAgents[i].name] = {\n          version: parseFloat(major + '.' + minor),\n          majorVersion: major,\n          minorVersion: minor,\n          patchVersion: patch,\n        };\n        break;\n      }\n    }\n\n    return browser;\n  },\n\n  /**\n   * Returns information about the current operating system, by parsing the user-agent string\n   *\n   * @returns {object}\n   */\n  getOS: function getOS () {\n    var userAgent = navigator.userAgent;\n\n    var os = {\n      windows: false,\n      mac: false,\n      linux: false,\n    };\n\n    // NOTE: The order matters here!\n    var userAgents = [\n      { name: 'mac', pattern: /(Mac OS|Macintosh|iPhone|iPad)/ },\n      { name: 'windows', pattern: /(Windows NT|Windows Phone)/ },\n      { name: 'linux', pattern: /(Linux|Android)/ },\n    ];\n\n    for (var i = 0; i < userAgents.length; i++) {\n      var match = userAgents[i].pattern.exec(userAgent);\n      if (match) {\n        os[userAgents[i].name] = true;\n        break;\n      }\n    }\n\n    return os;\n  },\n};\n"
  ]
}